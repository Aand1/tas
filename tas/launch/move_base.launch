<?xml version="1.0"?>
<launch>
  <!-- Move Base-->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
    <rosparam>
      obstacle_range: 1.05
      raytrace_range: 2.5
      footprint: [[0.33, 0.22], [0.33, -0.22], [-0.33, -0.22], [-0.33, 0.22]]
      inflation_radius: 1.5
      observation_sources: laser_scan_sensor
      laser_scan_sensor: {sensor_frame: laser_front, data_type: LaserScan, topic: scan, marking: true, clearing: true}
    </rosparam>
    <rosparam ns="global_costmap">
      global_frame: /map
      robot_base_frame: base_link
      map_type: costmap
      update_frequency: 10.0
      publish_frequency: 10.0
      width: 50
      height: 50
      static_map: true
      rolling_window: false
      transform_tolerance: 0.2 #500
      resolution: 0.05
    </rosparam>
    <rosparam ns="local_costmap">
      global_frame: /map
      robot_base_frame: base_link
      update_frequency: 5.0 #50
      publish_frequency: 2.0
      static_map: false
      rolling_window: true
      width: 10
      height: 10
      resolution: 0.05
      transform_tolerance: .2000
    </rosparam>
    <rosparam ns="TrajectoryPlannerROS">
      transform_tolerance: 0.3
      sim_time: 5.0
      sim_granularity: 0.25 #0.25
      angular_sim_granularity: 1e-3 #0.025
      dwa: true
      vx_samples: 5
      vtheta_samples: 20
      max_vel_x: 3.0
      min_vel_x: 0.1
      max_rotational_vel: 2.0
      min_in_place_rotational_vel: 0.0
      xy_goal_tolerance: 0.5 #0.5
      yaw_goal_tolerance: 1.5
      goal_distance_bias: 0.8 #0.2
      path_distance_bias: 1.5 #0.8
      occdist_scale: 0.1
      heading_lookahead: 2.9 #0.325
      oscillation_reset_dist: 0.05 #0.05
      holonomic_robot: false
      acc_lim_th: 2.5 #3.2
      acc_lim_x: 2.5 #2.5
      acc_lim_y: 2.5 #2.5
      escape_vel: -1.0
      heading_scoring: true
      heading_scoring_timestep: 0.8
      simple_attractor: false
      publish_cost_grid_pc: true
      meter_scoring: true
    </rosparam>
  </node>

  <!-- Run trajectory control -->
  <node pkg="tas_autonomous_control" type="tas_autonomous_control_node" name="tas_autonomous_control_node" output="screen"/>

  <!-- Run rviz -->
  <!--node name="rviz" pkg="rviz" type="rviz" args="-d $(find rc_car_drift)/rviz_config.vcg">
</node-->


</launch>
